(()=>{"use strict";const e=[[6,null,2],[3,4,8],[7,1,5]],t=[[1,2,3],[4,5,6],[7,8,null]],o=[{x:0,y:-1,name:"⇐"},{x:-1,y:0,name:"⇑"},{x:0,y:1,name:"⇒"},{x:1,y:0,name:"⇓"}],n=(e,t,o=!0)=>{console.log(`Index of the state ${t}`);let n="";for(let t of e){const e=t.map((e=>e||" "));n+="-------------\n",n+=`| ${e[0]} | ${e[1]} | ${e[2]} |\n`}return n+="-------------\n",o&&console.log(n),n},l=e=>{let t={x:0,y:0,name:"empty"};e:for(let o=0;o<e[0].length;++o)for(let n=0;n<e.length;++n)if(null===e[o][n]){t.x=o,t.y=n;break e}return t},s=e=>e.x>=3||e.x<0||e.y>=3||e.y<0;class r{constructor(e,t,o,l,s){this.getState=()=>this.state,this.getMoves=()=>this.operator,this.getDepth=()=>this.depth,this.pathFromStart=()=>{let e=[],t=[],o=this;do{e.push(o?.getState()),t.push(o?.getMoves()),o=o?.parent,o.parent||e.push(o?.getState())}while(0!==o?.getDepth());e.reverse(),t.reverse();let l=1;for(const t of e)n(t,l),l++;return console.log(`Кількість переміщень: ${t.length}`),console.log(`Переміщення по порядку: ${t.join(", ")}\n`),t},this.state=e,this.parent=t,this.operator=o,this.depth=l,this.cost=s}}const a=new Map;a.set(e.toString(),!0);const i=[new r(e,null,null,0,0)],c=[{state:e,index:1}];let d={currentState:null,moves:0,settled:0,dropped:0,depth:0,haveSolution:!1};{!function(){let e=0,n=0;for(;i.length;){let g=i.shift();if(d={currentState:g,moves:e,settled:a.size,dropped:n,depth:g.getDepth(),haveSolution:!1},h=g.getState(),p=t,h?.toString()===p?.toString())return void(d.haveSolution=!0);const u=l(g.getState());o.forEach((t=>{const o=g?.getState()?.map((e=>[...e])),l={x:u.x+t.x,y:u.y+t.y,name:t.name};s(l)||([o[u.x][u.y],o[l.x][l.y]]=[o[l.x][l.y],o[u.x][u.y]],a.get(o.toString())?n++:(i.push(new r(o,g,t.name,g.getDepth()+1,0)),a.set(o.toString(),!0),c.push({state:o,index:e+2})),e++)}))}var h,p}();const e=document.querySelector(".next"),h=document.querySelector(".result"),p=document.getElementById("results");let g=0;e?.addEventListener("click",(()=>{p?.insertAdjacentHTML("beforeend",`\n        <h2 class="text-primary fw-bold">Index of the state is ${c[g].index}</h2>\n      `);const e=document.createElement("table");e.className+="table table-primary table-hover table-bordered table-sm align-middle",e.style.width="200px",e.style.height="200px";const t=document.createElement("tbody");for(let e of c[g].state){const o=t.insertRow();for(let t of e){const e=o.insertCell();e.classList.add("align-middle"),e.innerHTML=t?String(t):" "}}e.appendChild(t),p?.appendChild(e),n(c[g].state,c[g].index),g++})),h?.addEventListener("click",(()=>{d.haveSolution?(console.log("Порядок переміщень для розв'язку гри в 8 :"),d?.currentState?.pathFromStart(),console.log(`Кількість відвіданих станів : ${d.moves}`),console.log(`Кількість станів занесених у БД : ${d.settled} `),console.log(`Кількість відкинутих станів : ${d.dropped}`),console.log(`Глибина дерева пошуку на якій знайдено рішення : ${d.depth}`)):(console.log(`Кількість відвіданих станів : ${d.moves}`),console.log(`Кількість станів занесених у БД : ${d.settled} `),console.log(`Кількість відкинутих станів : ${d.dropped}`),console.log("Гра у 8 немає розв'язків"))}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,